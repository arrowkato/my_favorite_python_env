# poetry document: https://python-poetry.org/docs/
[tool.poetry]
name = "my-favorite-python-env"
version = "0.1.0"
description = "僕の好きなPython開発環境"
authors = ["arrowkato"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
# "^3.10.8" は ">=3.10.8, <4.0.0" と同じ意味です。
# ref https://python-poetry.org/docs/dependency-specification/#version-constraints
python = "^3.10.8"
numpy = "^2.2.3"

# 複数リポジトリに分割して、共通機能を arrowkato/my_private_repo リポジトリに集約して読み込んで利用する想定です。
# arrowkato/my_private_repo 自体は、poetryのセットアップをして適当にpyyamlをインストールしただけのリポジトリです。
my_private_repo = {git = "ssh://git@github.com/arrowkato/my_private_repo.git"}

[tool.poetry.group.dev.dependencies]
pyproject-flake8 = "^7.0.0"
mypy = "^1.14"
black = "^24.10.0"
isort = "^5.13.2"

[build-system]
requires = ["poetry>=1.2.0"]
build-backend = "poetry.core.masonry.api"


# 以下linter formatterの設定
[tool.flake8]
# blackとあわせてください
max-line-length = 120
max-complexity = 10
# 無視する場合は、エラーや警告ががある場合は、下記のように設定してください
# ignore = "W503,W504"

[tool.mypy]
# mypy.ini と少し書き方が違うことに注意してください
# https://mypy.readthedocs.io/en/stable/config_file.html
python_version = "3.10"
ignore_missing_imports = true
# インストールしたライブラリ自体でエラーに引っかかる事があるためです。
exclude = [
    "venv/*",
    '\.venv/*',
]

[tool.black]
target-version = ["py310"]
# 1行の長さはこれに合わせてください。
line-length = 120

[tool.isort]
# blackとあわせてください
line_length = 120
# blackと競合しない設定 https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes.html
multi_line_output = 3
# blackと競合しないように許容
ensure_newline_before_comments = true
use_parentheses = true

